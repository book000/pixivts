name: Update Snapshots

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-snapshots:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.1
        env:
          MYSQL_ROOT_PASSWORD: rootPassword
          MYSQL_USER: pixiv-ts
          MYSQL_PASSWORD: pixiv-ts-test
          MYSQL_DATABASE: pixiv-ts
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: üõé Checkout
        uses: actions/checkout@v4

      - name: üèó Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          run_install: false

      - name: üìÇ Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: üìÇ Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: üë®üèª‚Äçüíª Install dependencies
        run: |
          pnpm install --frozen-lockfile --prefer-frozen-lockfile

      - name: üèÉ Update snapshot
        run: pnpm run test -u
        env:
          PIXIV_REFRESH_TOKEN: ${{ secrets.PIXIV_REFRESH_TOKEN }}
          NODE_ENV: test
          RESPONSE_DB_HOSTNAME: localhost
          RESPONSE_DB_USERNAME: pixiv-ts
          RESPONSE_DB_PASSWORD: pixiv-ts-test
          RESPONSE_DB_DATABASE: pixiv-ts
          RESPONSE_DB_PORT: 3306

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b update-snapshots
          git add .
          git commit -m 'Update snapshots'
          git push origin update-snapshots

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-snapshots
          base: master
          title: 'Update snapshots'
          body: 'This PR updates the snapshots.'
          assignees: 'book000'
